[{"path":"https://privefl.github.io/runonce/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Florian Privé. Author, maintainer.","code":""},{"path":"https://privefl.github.io/runonce/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Privé F (2025). runonce: Run Save Result. https://github.com/privefl/runonce, https://privefl.github.io/runonce/.","code":"@Manual{,   title = {runonce: Run Once and Save Result},   author = {Florian Privé},   year = {2025},   note = {https://github.com/privefl/runonce, https://privefl.github.io/runonce/}, }"},{"path":"https://privefl.github.io/runonce/index.html","id":"runonce","dir":"","previous_headings":"","what":"Run Once and Save Result","title":"Run Once and Save Result","text":"Run save result. , just read result.","code":""},{"path":"https://privefl.github.io/runonce/index.html","id":"code-example","dir":"","previous_headings":"","what":"Code example","title":"Run Once and Save Result","text":"","code":"tmp <- tempfile(fileext = \".rds\")  save_run({   Sys.sleep(2)   1 }, file = tmp)  save_run({   Sys.sleep(2)   1 }, file = tmp)"},{"path":"https://privefl.github.io/runonce/reference/download_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Download once — download_file","title":"Download once — download_file","text":"Download file exist yet.","code":""},{"path":"https://privefl.github.io/runonce/reference/download_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download once — download_file","text":"","code":"download_file(   url,   dir = tempdir(),   fname = url_basename(url),   overwrite = FALSE,   mode = \"wb\",   timeout = max(300, getOption(\"timeout\")),   ... )"},{"path":"https://privefl.github.io/runonce/reference/download_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download once — download_file","text":"url URL file downloaded. dir Directory download file. fname Base name downloaded file (dir prefixed). overwrite Whether overwrite? Default FALSE. mode See parameter download.file(). Default \"wb\" seems useful Windows systems. timeout Number seconds timeout. Default 300 (5 minutes). ... Arguments passed utils::download.file method Method used downloading files.  Current     download methods \"internal\", \"libcurl\",     \"wget\", \"curl\" \"wininet\" (Windows     ), value \"auto\": see ‘Details’     ‘Note’. method can also set option     \"download.file.method\": see options(). quiet TRUE, suppress status messages (),     progress bar. cacheOK logical.  server-side cached value acceptable? extra character vector additional command-line arguments     \"wget\" \"curl\" methods. headers named character vector HTTP headers use HTTP     requests.  ignored non-HTTP URLs.  User-Agent     header taken HTTPUserAgent option (see     options) automatically used first header.","code":""},{"path":"https://privefl.github.io/runonce/reference/download_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download once — download_file","text":"Path downloaded (existing) file.","code":""},{"path":"https://privefl.github.io/runonce/reference/download_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download once — download_file","text":"","code":"download_file(\"https://github.com/privefl.png\") #> [1] \"C:\\\\Users\\\\au639593\\\\AppData\\\\Local\\\\Temp\\\\RtmpoxPnOm/privefl.png\" download_file(\"https://github.com/privefl.png\") #> [1] \"C:\\\\Users\\\\au639593\\\\AppData\\\\Local\\\\Temp\\\\RtmpoxPnOm/privefl.png\" download_file(\"https://github.com/privefl.png\", overwrite = TRUE) #> [1] \"C:\\\\Users\\\\au639593\\\\AppData\\\\Local\\\\Temp\\\\RtmpoxPnOm/privefl.png\""},{"path":"https://privefl.github.io/runonce/reference/runonce-package.html","id":null,"dir":"Reference","previous_headings":"","what":"runonce: Run Once and Save Result — runonce-package","title":"runonce: Run Once and Save Result — runonce-package","text":"Package 'runonce' helps automating saving long-running code help running code multiple times. run long-running code , saves result file disk. , result already exists, .e. code already run output already saved, just reads result stored file instead running code .","code":""},{"path":"https://privefl.github.io/runonce/reference/runonce-package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"runonce: Run Once and Save Result — runonce-package","text":"timing Whether print timing running code? Default TRUE.","code":""},{"path":[]},{"path":"https://privefl.github.io/runonce/reference/runonce-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"runonce: Run Once and Save Result — runonce-package","text":"Maintainer: Florian Privé florian.prive.21@gmail.com","code":""},{"path":"https://privefl.github.io/runonce/reference/save_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Cache result — save_run","title":"Cache result — save_run","text":"Cache result code RDS file.","code":""},{"path":"https://privefl.github.io/runonce/reference/save_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cache result — save_run","text":"","code":"save_run(code, file, timing = TRUE)"},{"path":"https://privefl.github.io/runonce/reference/save_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cache result — save_run","text":"code Code run. forget wrap { }. Also, beware job make sure code data changed. case, need remove file storing outdated result. file File path result stored. extension rds. timing Whether print timing running code? Default TRUE.","code":""},{"path":"https://privefl.github.io/runonce/reference/save_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cache result — save_run","text":"evaluation code first time, content file otherwise.","code":""},{"path":"https://privefl.github.io/runonce/reference/save_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cache result — save_run","text":"","code":"# Prepare some temporary file tmp <- tempfile(fileext = \".rds\")  # Run once because result does not exist yet save_run({ Sys.sleep(1); 1 }, file = tmp) #>    user  system elapsed  #>    0.00    0.00    1.01  #> Code finished running at 2025-06-10 10:49:39 CEST  #> [1] 1  # Skip run because the result already exists # (but still output how long it took the first time) Sys.sleep(1); save_run({ Sys.sleep(1); 1 }, file = tmp) #>    user  system elapsed  #>    0.00    0.00    1.01  #> Code finished running at 2025-06-10 10:49:39 CEST  #> [1] 1"},{"path":"https://privefl.github.io/runonce/reference/skip_run_if.html","id":null,"dir":"Reference","previous_headings":"","what":"Skip code — skip_run_if","title":"Skip code — skip_run_if","text":"Skip code conditions fulfilled. code return anything.","code":""},{"path":"https://privefl.github.io/runonce/reference/skip_run_if.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skip code — skip_run_if","text":"","code":"skip_run_if(code, cond = NULL, files = NULL, timing = TRUE)"},{"path":"https://privefl.github.io/runonce/reference/skip_run_if.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Skip code — skip_run_if","text":"code Code run. forget wrap { }. cond Condition fulfilled skip running code. Default NULL (used). evaluate either TRUE FALSE otherwise. files Character vector file path(s). Default NULL (used). function checks files exist, exist, skips running code. timing Whether print timing running code? Default TRUE.","code":""},{"path":"https://privefl.github.io/runonce/reference/skip_run_if.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Skip code — skip_run_if","text":"NULL, invisibly.","code":""},{"path":"https://privefl.github.io/runonce/reference/skip_run_if.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Skip code — skip_run_if","text":"","code":"# Prepare some temporary file tmp <- tempfile(fileext = \".txt\")  # Run once because file does not exist yet skip_run_if({   Sys.sleep(2)   write.table(iris, tmp) }, cond = file.exists(tmp)) #>    user  system elapsed  #>    0.00    0.00    2.03   # Skip run because `cond` is `TRUE` skip_run_if({   Sys.sleep(2)   write.table(iris, tmp) }, cond = file.exists(tmp))  # Skip run because file exists skip_run_if({   Sys.sleep(2)   write.table(iris, tmp) }, files = tmp)"}]
